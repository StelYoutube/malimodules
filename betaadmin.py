from telethon import events
from .. import loader, utils
import asyncio


@loader.tds
class YaAdminMod(loader.Module):
    """YaAdmin: –±–∞–Ω, –∫–∏–∫, –º—É—Ç, –≤–∞—Ä–Ω –∏ —Ç.–¥."""

    strings = {
        "name": "YaAdmin",
        "muted": "‚úîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —É—Å–ø–µ—à–Ω–æ –∑–∞–º—É—á–µ–Ω –Ω–∞ {time} –º–∏–Ω—É—Ç(—ã) –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}",
        "unmuted": "‚úîÔ∏è –ú—É—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} —Å–Ω—è—Ç.",
        "warned": "‚úîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–∞ {time} –¥–Ω–µ–π –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}",
        "warn_removed": "‚úîÔ∏è –° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {warns}",
        "banned": "üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –≤–∞—Ä–Ω–æ–≤.",
    }

    def __init__(self):
        self.warns = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞—Ä–Ω–∞—Ö

    async def mutecmd(self, message):
        """–ú—É—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: .mute <—Ä–µ–ø–ª–∞–π/username/id> <–≤—Ä–µ–º—è (–º–∏–Ω—É—Ç—ã)> <–ø—Ä–∏—á–∏–Ω–∞>"""
        args = utils.get_args_raw(message).split()
        reply = await message.get_reply_message()
        
        if not args and not reply:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—Ä–µ–º—è –∏ –ø—Ä–∏—á–∏–Ω—É.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await self._get_user(message, reply, args[0] if args else None)
        if not user:
            await message.edit("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –º—É—Ç–∞
        try:
            time = int(args[1]) if len(args) > 1 else 10  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 10 –º–∏–Ω—É—Ç
        except ValueError:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è (–≤ –º–∏–Ω—É—Ç–∞—Ö).")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
        reason = " ".join(args[2:]) if len(args) > 2 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É—Ç
        await message.client.edit_permissions(
            message.chat_id, 
            user.id, 
            send_messages=False  # –ó–∞–ø—Ä–µ—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
        )
        await message.edit(self.strings("muted").format(user=user.first_name, time=time, reason=reason))

        # –ñ–¥—ë–º —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ä–æ–∫, –∑–∞—Ç–µ–º —Å–Ω–∏–º–∞–µ–º –º—É—Ç
        await asyncio.sleep(time * 60)  # –ü–µ—Ä–µ–≤–æ–¥ –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥—ã
        await message.client.edit_permissions(
            message.chat_id, 
            user.id, 
            send_messages=True  # –°–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
        )
        await message.client.send_message(
            message.chat_id, 
            f"‚úîÔ∏è –ú—É—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name} –∑–∞–≤–µ—Ä—à—ë–Ω."
        )

    async def unmutecmd(self, message):
        """–°–Ω–∏–º–∞–µ—Ç –º—É—Ç: .unmute <—Ä–µ–ø–ª–∞–π/username/id>"""
        args = utils.get_args_raw(message).split()
        reply = await message.get_reply_message()
        
        if not args and not reply:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∫–∏.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await self._get_user(message, reply, args[0] if args else None)
        if not user:
            await message.edit("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

        # –£–±–∏—Ä–∞–µ–º –º—É—Ç
        await message.client.edit_permissions(
            message.chat_id, 
            user.id, 
            send_messages=True
        )
        await message.edit(self.strings("unmuted").format(user=user.first_name))

    async def warncmd(self, message):
        """–í—ã–¥–∞—ë—Ç –≤–∞—Ä–Ω: .warn <—Ä–µ–ø–ª–∞–π/username/id> <—Å—Ä–æ–∫ (–¥–Ω–∏)> <–ø—Ä–∏—á–∏–Ω–∞>"""
        args = utils.get_args_raw(message).split()
        reply = await message.get_reply_message()
        
        if not args and not reply:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å—Ä–æ–∫ –∏ –ø—Ä–∏—á–∏–Ω—É –≤–∞—Ä–Ω–∞.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await self._get_user(message, reply, args[0] if args else None)
        if not user:
            await message.edit("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ä–æ–∫ –≤–∞—Ä–Ω–∞
        try:
            time = int(args[1]) if len(args) > 1 else 7  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 7 –¥–Ω–µ–π
        except ValueError:
            await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è (–≤ –¥–Ω—è—Ö).")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
        reason = " ".join(args[2:]) if len(args) > 2 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–Ω
        self.warns[user.id] = self.warns.get(user.id, 0) + 1

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤
        if self.warns[user.id] >= 3:  # –õ–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤ = 3
            await message.client.edit_permissions(message.chat_id, user.id, view_messages=False)
            await message.edit(self.strings("banned").format(user=user.first_name))
            self.warns[user.id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–∞—Ä–Ω—ã
        else:
            await message.edit(self.strings("warned").format(user=user.first_name, time=time, reason=reason))
            await asyncio.sleep(time * 86400)  # –ü–µ—Ä–µ–≤–æ–¥ –¥–Ω–µ–π –≤ —Å–µ–∫—É–Ω–¥—ã
            self.warns[user.id] -= 1
            await message.client.send_message(
                message.chat_id, 
                f"‚úîÔ∏è –í–∞—Ä–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name} –∏—Å—Ç—ë–∫."
            )

    async def _get_user(self, message, reply, arg):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            if reply:
                return await message.client.get_entity(reply.sender_id)
            if arg:
                return await message.client.get_entity(arg)
        except Exception:
            return None
